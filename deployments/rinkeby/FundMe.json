{
  "address": "0x7E9105A9B9ae45723088B64aa4A16B59c2aD8606",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0xfde1b00234afe60d02f5002d325c29c03750b5f0074a3e4284a61afb684a1978",
  "receipt": {
    "to": null,
    "from": "0x15410fa0Ed20D6b7A0133c361f22a778375a2321",
    "contractAddress": "0x7E9105A9B9ae45723088B64aa4A16B59c2aD8606",
    "transactionIndex": 11,
    "gasUsed": "1040105",
    "logsBloom": "0x
    "blockHash": "0xbb0d778798cfb1f2e36eccbfc8e92a8de74a1c661969e12f7d6d5a7e4fe0b728",
    "transactionHash": "0xfde1b00234afe60d02f5002d325c29c03750b5f0074a3e4284a61afb684a1978",
    "logs": [],
    "blockNumber": 11253983,
    "cumulativeGasUsed": "5090245",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8a753747a1fa494ec906ce90e9f37563a8af630e"
  ],
  "numDeployments": 2,
  "solcInputHash": "db20afec2e9c064838ee2eaeffbfb615",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Gonzalo Barria\",\"details\":\"This implements price feeds as a library\",\"kind\":\"dev\",\"methods\":{\"fund()\":{\"details\":\"ayuda para desarrolladores\"}},\"title\":\"A contract for Crowdfunding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"This function funds this contract\"}},\"notice\":\"This contract is a demo of funding\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport '@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol';\\nimport './PriceConverter.sol';\\n\\nerror FundMe__NotOwner();\\n\\n/**\\n * @title A contract for Crowdfunding\\n * @author Gonzalo Barria\\n * @notice This contract is a demo of funding\\n * @dev This implements price feeds as a library\\n */\\ncontract FundMe {\\n  // Type Declarations\\n  using PriceConverter for uint256;\\n\\n  // State variables\\n  //   event Funded(address indexed from, uint256 amount);\\n\\n  mapping(address => uint256) private s_addressToAmountFunded;\\n  address[] private s_funders;\\n  address private immutable i_owner;\\n  uint256 public constant MINIMUM_USD = 50 * 10**18;\\n  AggregatorV3Interface private s_priceFeed;\\n\\n  modifier onlyOwner() {\\n    // require(msg.sender == i_owner);\\n    if (msg.sender != i_owner) revert FundMe__NotOwner();\\n    _;\\n  }\\n\\n  //   Functions Order\\n  //   constructor\\n  //   receive\\n  //   fallback\\n  //   external\\n  //   public\\n  //   internal\\n  //   private\\n  //   view / pure\\n\\n  constructor(address priceFeedAddress) {\\n    i_owner = msg.sender;\\n    s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n  }\\n\\n  /**\\n   * @notice This function funds this contract\\n   * @dev ayuda para desarrolladores\\n   */\\n  function fund() public payable {\\n    require(\\n      msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n      'You need to spend more ETH!'\\n    );\\n    // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n    s_addressToAmountFunded[msg.sender] += msg.value;\\n    s_funders.push(msg.sender);\\n    // emit Funded(msg.sender, msg.value);\\n  }\\n\\n  function withdraw() public payable onlyOwner {\\n    for (\\n      uint256 funderIndex = 0;\\n      funderIndex < s_funders.length;\\n      funderIndex++\\n    ) {\\n      address funder = s_funders[funderIndex];\\n      s_addressToAmountFunded[funder] = 0;\\n    }\\n    s_funders = new address[](0);\\n    // payable(msg.sender).transfer(address(this).balance);\\n    (bool success, ) = payable(msg.sender).call{value: address(this).balance}(\\n      ''\\n    );\\n    // call vs delegatecall\\n    require(success, 'Transfer failed');\\n  }\\n\\n  function cheaperWithdraw() public payable onlyOwner {\\n    address[] memory funders = s_funders;\\n\\n    for (uint256 funderIndex = 0; funderIndex < funders.length; funderIndex++) {\\n      address funder = funders[funderIndex];\\n      s_addressToAmountFunded[funder] = 0;\\n    }\\n    s_funders = new address[](0);\\n    // payable(msg.sender).transfer(address(this).balance);\\n    (bool success, ) = i_owner.call{value: address(this).balance}('');\\n    // call vs delegatecall\\n    require(success, 'Transfer failed');\\n  }\\n\\n  //   view / pure\\n\\n  function getAddressToAmountFunded(address funder)\\n    public\\n    view\\n    returns (uint256)\\n  {\\n    return s_addressToAmountFunded[funder];\\n  }\\n\\n  function getFunder(uint256 index) public view returns (address) {\\n    return s_funders[index];\\n  }\\n\\n  function getOwner() public view returns (address) {\\n    return i_owner;\\n  }\\n\\n  function getPriceFeed() public view returns (AggregatorV3Interface) {\\n    return s_priceFeed;\\n  }\\n}\\n\",\"keccak256\":\"0xa248eb74eeee3fccf999a84e6da4dbaf62b0b0a369f165c742c48e6d3d050808\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport '@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol';\\r\\n\\r\\n// Why is this a library and not abstract?\\r\\n// Why not an interface?\\r\\nlibrary PriceConverter {\\r\\n  // We could make this public, but then we'd have to deploy it\\r\\n  function getPrice(AggregatorV3Interface priceFeed)\\r\\n    internal\\r\\n    view\\r\\n    returns (uint256)\\r\\n  {\\r\\n    (, int256 answer, , , ) = priceFeed.latestRoundData();\\r\\n    // ETH/USD rate in 18 digit\\r\\n    return uint256(answer * 10000000000);\\r\\n  }\\r\\n\\r\\n  // 1000000000\\r\\n  function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed)\\r\\n    internal\\r\\n    view\\r\\n    returns (uint256)\\r\\n  {\\r\\n    uint256 ethPrice = getPrice(priceFeed);\\r\\n    uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\r\\n    // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\r\\n    return ethAmountInUsd;\\r\\n  }\\r\\n}\\r\\n\",\"keccak256\":\"0xf9e1e79f4e84d73ac677d126a9d1a74bf168fb978ad7328a16af1c45856e93de\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620012f4380380620012f483398181016040528101906200003791906200011d565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200014f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e582620000b8565b9050919050565b620000f781620000d8565b81146200010357600080fd5b50565b6000815190506200011781620000ec565b92915050565b600060208284031215620001365762000135620000b3565b5b6000620001468482850162000106565b91505092915050565b60805161117462000180600039600081816101e301528181610432015281816105bc01526107b201526111746000f3fe60806040526004361061007b5760003560e01c80639e87a5cd1161004e5780639e87a5cd1461011d578063b60d428814610148578063be2693f014610152578063d7b4750c1461015c5761007b565b80630343fb25146100805780633ccfd60b146100bd5780636b69a592146100c7578063893d20e8146100f2575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610aac565b610199565b6040516100b49190610af2565b60405180910390f35b6100c56101e1565b005b3480156100d357600080fd5b506100dc610421565b6040516100e99190610af2565b60405180910390f35b3480156100fe57600080fd5b5061010761042e565b6040516101149190610b1c565b60405180910390f35b34801561012957600080fd5b50610132610456565b60405161013f9190610b96565b60405180910390f35b610150610480565b005b61015a6105ba565b005b34801561016857600080fd5b50610183600480360381019061017e9190610bdd565b61087e565b6040516101909190610b1c565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610266576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156103115760006001828154811061028c5761028b610c0a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061030990610c68565b915050610269565b50600067ffffffffffffffff81111561032d5761032c610cb1565b5b60405190808252806020026020018201604052801561035b5781602001602082028036833780820191505090505b50600190805190602001906103719291906109a2565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161039890610d11565b60006040518083038185875af1925050503d80600081146103d5576040519150601f19603f3d011682016040523d82523d6000602084013e6103da565b606091505b505090508061041e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041590610d83565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b18800006104bf600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108c690919063ffffffff16565b1015610500576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f790610def565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461054e9190610e0f565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461063f576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106c357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610679575b5050505050905060005b815181101561074d5760008282815181106106eb576106ea610c0a565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061074590610c68565b9150506106cd565b50600067ffffffffffffffff81111561076957610768610cb1565b5b6040519080825280602002602001820160405280156107975781602001602082028036833780820191505090505b50600190805190602001906107ad9291906109a2565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516107f490610d11565b60006040518083038185875af1925050503d8060008114610831576040519150601f19603f3d011682016040523d82523d6000602084013e610836565b606091505b505090508061087a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087190610d83565b60405180910390fd5b5050565b60006001828154811061089457610893610c0a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108d283610902565b90506000670de0b6b3a764000085836108eb9190610e65565b6108f59190610eee565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561094b57600080fd5b505afa15801561095f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109839190610fac565b5050509150506402540be4008161099a9190611027565b915050919050565b828054828255906000526020600020908101928215610a1b579160200282015b82811115610a1a5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109c2565b5b509050610a289190610a2c565b5090565b5b80821115610a45576000816000905550600101610a2d565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a7982610a4e565b9050919050565b610a8981610a6e565b8114610a9457600080fd5b50565b600081359050610aa681610a80565b92915050565b600060208284031215610ac257610ac1610a49565b5b6000610ad084828501610a97565b91505092915050565b6000819050919050565b610aec81610ad9565b82525050565b6000602082019050610b076000830184610ae3565b92915050565b610b1681610a6e565b82525050565b6000602082019050610b316000830184610b0d565b92915050565b6000819050919050565b6000610b5c610b57610b5284610a4e565b610b37565b610a4e565b9050919050565b6000610b6e82610b41565b9050919050565b6000610b8082610b63565b9050919050565b610b9081610b75565b82525050565b6000602082019050610bab6000830184610b87565b92915050565b610bba81610ad9565b8114610bc557600080fd5b50565b600081359050610bd781610bb1565b92915050565b600060208284031215610bf357610bf2610a49565b5b6000610c0184828501610bc8565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c7382610ad9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610ca657610ca5610c39565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610cfb600083610ce0565b9150610d0682610ceb565b600082019050919050565b6000610d1c82610cee565b9150819050919050565b600082825260208201905092915050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b6000610d6d600f83610d26565b9150610d7882610d37565b602082019050919050565b60006020820190508181036000830152610d9c81610d60565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610dd9601b83610d26565b9150610de482610da3565b602082019050919050565b60006020820190508181036000830152610e0881610dcc565b9050919050565b6000610e1a82610ad9565b9150610e2583610ad9565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e5a57610e59610c39565b5b828201905092915050565b6000610e7082610ad9565b9150610e7b83610ad9565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610eb457610eb3610c39565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ef982610ad9565b9150610f0483610ad9565b925082610f1457610f13610ebf565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f3e81610f1f565b8114610f4957600080fd5b50565b600081519050610f5b81610f35565b92915050565b6000819050919050565b610f7481610f61565b8114610f7f57600080fd5b50565b600081519050610f9181610f6b565b92915050565b600081519050610fa681610bb1565b92915050565b600080600080600060a08688031215610fc857610fc7610a49565b5b6000610fd688828901610f4c565b9550506020610fe788828901610f82565b9450506040610ff888828901610f97565b935050606061100988828901610f97565b925050608061101a88828901610f4c565b9150509295509295909350565b600061103282610f61565b915061103d83610f61565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561107c5761107b610c39565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156110b9576110b8610c39565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156110f6576110f5610c39565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561113357611132610c39565b5b82820290509291505056fea26469706673582212200194cf401b31b8385dd18814032c642aaec22d986a0dd0b097226f36d2f5b50f64736f6c63430008090033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c80639e87a5cd1161004e5780639e87a5cd1461011d578063b60d428814610148578063be2693f014610152578063d7b4750c1461015c5761007b565b80630343fb25146100805780633ccfd60b146100bd5780636b69a592146100c7578063893d20e8146100f2575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610aac565b610199565b6040516100b49190610af2565b60405180910390f35b6100c56101e1565b005b3480156100d357600080fd5b506100dc610421565b6040516100e99190610af2565b60405180910390f35b3480156100fe57600080fd5b5061010761042e565b6040516101149190610b1c565b60405180910390f35b34801561012957600080fd5b50610132610456565b60405161013f9190610b96565b60405180910390f35b610150610480565b005b61015a6105ba565b005b34801561016857600080fd5b50610183600480360381019061017e9190610bdd565b61087e565b6040516101909190610b1c565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610266576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156103115760006001828154811061028c5761028b610c0a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061030990610c68565b915050610269565b50600067ffffffffffffffff81111561032d5761032c610cb1565b5b60405190808252806020026020018201604052801561035b5781602001602082028036833780820191505090505b50600190805190602001906103719291906109a2565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161039890610d11565b60006040518083038185875af1925050503d80600081146103d5576040519150601f19603f3d011682016040523d82523d6000602084013e6103da565b606091505b505090508061041e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041590610d83565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b18800006104bf600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108c690919063ffffffff16565b1015610500576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f790610def565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461054e9190610e0f565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461063f576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106c357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610679575b5050505050905060005b815181101561074d5760008282815181106106eb576106ea610c0a565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061074590610c68565b9150506106cd565b50600067ffffffffffffffff81111561076957610768610cb1565b5b6040519080825280602002602001820160405280156107975781602001602082028036833780820191505090505b50600190805190602001906107ad9291906109a2565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516107f490610d11565b60006040518083038185875af1925050503d8060008114610831576040519150601f19603f3d011682016040523d82523d6000602084013e610836565b606091505b505090508061087a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087190610d83565b60405180910390fd5b5050565b60006001828154811061089457610893610c0a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108d283610902565b90506000670de0b6b3a764000085836108eb9190610e65565b6108f59190610eee565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561094b57600080fd5b505afa15801561095f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109839190610fac565b5050509150506402540be4008161099a9190611027565b915050919050565b828054828255906000526020600020908101928215610a1b579160200282015b82811115610a1a5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109c2565b5b509050610a289190610a2c565b5090565b5b80821115610a45576000816000905550600101610a2d565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a7982610a4e565b9050919050565b610a8981610a6e565b8114610a9457600080fd5b50565b600081359050610aa681610a80565b92915050565b600060208284031215610ac257610ac1610a49565b5b6000610ad084828501610a97565b91505092915050565b6000819050919050565b610aec81610ad9565b82525050565b6000602082019050610b076000830184610ae3565b92915050565b610b1681610a6e565b82525050565b6000602082019050610b316000830184610b0d565b92915050565b6000819050919050565b6000610b5c610b57610b5284610a4e565b610b37565b610a4e565b9050919050565b6000610b6e82610b41565b9050919050565b6000610b8082610b63565b9050919050565b610b9081610b75565b82525050565b6000602082019050610bab6000830184610b87565b92915050565b610bba81610ad9565b8114610bc557600080fd5b50565b600081359050610bd781610bb1565b92915050565b600060208284031215610bf357610bf2610a49565b5b6000610c0184828501610bc8565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c7382610ad9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610ca657610ca5610c39565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610cfb600083610ce0565b9150610d0682610ceb565b600082019050919050565b6000610d1c82610cee565b9150819050919050565b600082825260208201905092915050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b6000610d6d600f83610d26565b9150610d7882610d37565b602082019050919050565b60006020820190508181036000830152610d9c81610d60565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610dd9601b83610d26565b9150610de482610da3565b602082019050919050565b60006020820190508181036000830152610e0881610dcc565b9050919050565b6000610e1a82610ad9565b9150610e2583610ad9565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e5a57610e59610c39565b5b828201905092915050565b6000610e7082610ad9565b9150610e7b83610ad9565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610eb457610eb3610c39565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ef982610ad9565b9150610f0483610ad9565b925082610f1457610f13610ebf565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f3e81610f1f565b8114610f4957600080fd5b50565b600081519050610f5b81610f35565b92915050565b6000819050919050565b610f7481610f61565b8114610f7f57600080fd5b50565b600081519050610f9181610f6b565b92915050565b600081519050610fa681610bb1565b92915050565b600080600080600060a08688031215610fc857610fc7610a49565b5b6000610fd688828901610f4c565b9550506020610fe788828901610f82565b9450506040610ff888828901610f97565b935050606061100988828901610f97565b925050608061101a88828901610f4c565b9150509295509295909350565b600061103282610f61565b915061103d83610f61565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561107c5761107b610c39565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156110b9576110b8610c39565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156110f6576110f5610c39565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561113357611132610c39565b5b82820290509291505056fea26469706673582212200194cf401b31b8385dd18814032c642aaec22d986a0dd0b097226f36d2f5b50f64736f6c63430008090033",
  "devdoc": {
    "author": "Gonzalo Barria",
    "details": "This implements price feeds as a library",
    "kind": "dev",
    "methods": {
      "fund()": {
        "details": "ayuda para desarrolladores"
      }
    },
    "title": "A contract for Crowdfunding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "fund()": {
        "notice": "This function funds this contract"
      }
    },
    "notice": "This contract is a demo of funding",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 74,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}